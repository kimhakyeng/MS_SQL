USE [PortfolioDB]
GO
/****** Object:  StoredProcedure [dbo].[ABILITY_SAVE_C]    Script Date: 2023-10-12 오후 3:25:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*
[T01]PROC    명: [ABILITYSAVE_C]
[T02]PROC  기능: 
[T03]입 력 변수:  
[T04]작성  일자: 2017-
[T05]작  성  자: 김하경
[T06]최종수정일: 
[T07]최종수정자:  
[T08]수정  이력: 
[T09]실행  예제: 
[T10]비      고:
*/
ALTER PROCEDURE [dbo].[ABILITY_SAVE_C]
	@IN_FUNC				NVARCHAR(10),			--구분 (CU:저장/ D:삭제)
	@IN_USER_ID				NVARCHAR(30),			--ID
	@IN_USER_NAME			NVARCHAR(10),
	
	@IN_NAME				NVARCHAR(30),
	@IN_REMARK				NVARCHAR(100),
	@IN_XML_CONTENTS		NVARCHAR(MAX),

	@RET_CODE				INT OUTPUT,
	@RET_MSG				NVARCHAR(250) OUTPUT
as
/*

*/
SET NOCOUNT ON

BEGIN TRY

PRINT OBJECT_NAME(@@PROCID) + ', START_TIME : ' + CONVERT(NVARCHAR, GETDATE(), 121)

BEGIN TRAN

	DECLARE @TRAN_TIME  DATETIME  --KEY 값으로 쓸 변수 선언
		
		,@WORK_NAME   NVARCHAR(100)
		,@COUNT			INT
		,@RCNT			INT
	
	SET @TRAN_TIME = GETDATE()
	SET @RCNT = 1

	--XML
	IF @IN_XML_CONTENTS <> '' --*********** XML 데이터 생성
	BEGIN
		IF OBJECT_ID('tempdb..#XML_TABLE') IS NOT NULL
			DROP TABLE #XML_TABLE

		CREATE TABLE #XML_TABLE --테이블에 맞게 
		(
			--WORK_DATE				NVARCHAR(20)
			WORK_NAME				NVARCHAR(50)
			,WORK_REMARK			NVARCHAR(100)
	
			,SEQ				INT
		)
		INSERT INTO #XML_TABLE
		EXEC P_GET_XMLDATA 'tempdb..#XML_TABLE', @IN_XML_CONTENTS

		SELECT @COUNT = COUNT(*) 
		FROM #XML_TABLE
	END
	--XML

	IF @IN_FUNC = 'A'
	BEGIN
		WHILE @COUNT >= @RCNT --XML 테이블의 ROW 수만큼 반복문
		BEGIN
			SELECT @WORK_NAME = WORK_NAME  -- 변수에 KEY 값 넣어주고
				
			FROM #XML_TABLE
			WHERE SEQ = @RCNT --  던지는 값이랑 맞는 데이터를 저장하기 위함

			IF EXISTS (SELECT 1 FROM ADVANTAGES_TABLE2  --해당 조건이 충족하면 업데이트 치고
								WHERE ADVANTAGES =@IN_NAME)													
			BEGIN				
				--업데이트
				UPDATE ADVANTAGES_TABLE2
				SET ADVANTAGES = A.WORK_NAME
				,ADVANTAGES_CONTENT = A.WORK_REMARK
				
				FROM #XML_TABLE AS A 
				JOIN ADVANTAGES_TABLE2 AS B
				ON(A.WORK_NAME = B.ADVANTAGES)								
				WHERE A.SEQ = @RCNT				
			END			
			ELSE
			BEGIN			
				--신규
				INSERT INTO ADVANTAGES_TABLE2
                 (ID, NAME, ADVANTAGES, ADVANTAGES_CONTENT)
				 SELECT @IN_USER_ID
					,@IN_USER_NAME				
					,A.WORK_NAME
					,A.WORK_REMARK					
				 FROM #XML_TABLE AS A
				 WHERE A.SEQ = @RCNT
			END
			SET @RCNT = @RCNT + 1
		END
		SET @RET_MSG = '저장 성공'
		SET @RET_CODE = 0
	END	
	ELSE IF @IN_FUNC = 'D'
	BEGIN
		--IF NOT EXISTS (SELECT 1 FROM TI_INVENTORY_MST
		--						WHERE ENTP_CODE = @IN_ENTP_CODE
		--						AND ITEM_CODE = @IN_ITEM_CODE)
								
		--BEGIN
		--	SET @RET_MSG = @IN_ITEM_CODE + ' 해당 코드는 존재하지 않습니다.'
		--	SET @RET_CODE = -1			
		--	RAISERROR(@RET_MSG, 11, 1)
		--END
		--ELSE
		BEGIN
			DELETE
			FROM ADVANTAGES_TABLE2
			WHERE ID = @IN_USER_ID
			AND ADVANTAGES = @IN_NAME
			AND ADVANTAGES_CONTENT = @IN_REMARK

			SET @RET_MSG = '삭제 성공'
			SET @RET_CODE = 0
		END
	END
	ELSE
	BEGIN
		SET @RET_MSG = '작업 구분이 없습니다.'
		SET @RET_CODE = -1			
		RAISERROR(@RET_MSG, 11, 1)
	END

COMMIT TRAN

PRINT OBJECT_NAME(@@PROCID) + ', END_TIME : ' + CONVERT(NVARCHAR, GETDATE(), 121)

END TRY

BEGIN CATCH
   IF @RET_CODE IS NULL BEGIN SET @RET_CODE = ERROR_NUMBER() END
   IF @RET_MSG IS NULL BEGIN SET @RET_MSG =  ERROR_MESSAGE() END

   IF @@TRANCOUNT> 0
      ROLLBACK TRAN
END CATCH
